% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sbm_functions.R
\name{calfsbm_nimble}
\alias{calfsbm_nimble}
\title{Implementation of CALF-SBM}
\usage{
calfsbm_nimble(
  adj_mat,
  simil_mat,
  nsim,
  burnin,
  thin,
  nchain,
  K,
  covariates,
  offset = TRUE,
  beta_scale = 10,
  return_gelman = FALSE
)
}
\arguments{
\item{adj_mat}{network adjacency matrix, with 1 indicating a connection and 0
indicating no connection. The matrix should be in base R matrix type}

\item{simil_mat}{network similarity matrix, with each non-diagonal entry
indicating the similarity between the two corresponding nodes. It should be 
non-negative, and the diagonal elements should all be equal to 0.}

\item{nsim}{Total number of MCMC iterations per chain}

\item{burnin}{Number of iterations in each chain to be discarded}

\item{thin}{Post-burnin thinning parameter}

\item{nchain}{Number of MCMC chains to run}

\item{K}{A positive integer indicating the number of clusters to test on.
It is recommended for the user to try a range of potential K values, and
choose the K value with the best WAIC.}

\item{covariates}{A matrix with each row corresponding to a node, and each 
column corresponding to a variable. Each entry indicates the value of the 
node-specific covariates. If \code{NULL}, initial cluster assignment will be 
generated at random}

\item{offset}{logical (default = \code{TRUE}); where \code{TRUE} 
indicates to use offset terms theta in the \code{NIMBLE} model}

\item{beta_scale}{numeric (default = 10) Prior standard deviation 
of all beta terms}

\item{return_gelman}{logical (default = \code{FALSE}); if \code{TRUE}, 
returns the Gelman-Rubin diagnostic for all beta terms}
}
\value{
List of beta, z, and history of K
}
\description{
Using MCMC parameters and number of clusters as input, return raw MCMC output
}
\examples{
\dontrun{
links <- sim_calfsbm(n_nodes = 50, K = 2, n_covar = 2, 
                    prob = c(0.5, 0.5), beta0 = 1, beta = diag(2) - 3, 
                    sigma = 0.3, spat = 1.5)
calfsbm_nimble(adj_mat = links$A, simil_mat = links$dis, nsim = 1000, 
                burnin = 500, thin = 2, nchain = 2, K = 2, 
                covariates = links$dis, offset = FALSE)
}
}
